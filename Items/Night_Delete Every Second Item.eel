Undo_BeginBlock2(0);
PreventUIRefresh(1);

itemCount = CountSelectedMediaItems(0);
tracksStored = 0;
tracks[];
function getUniqueTracks() local(lastTrackSaved, i, trackLoop, trackLoopNum, j, isTrackStored) (
	lastTrackSaved = -1;
	itemCount > 1 ? (
		i = 0;
		loop(itemCount-1,
			trackLoop = GetMediaItem_Track(GetSelectedMediaItem(0, i));
			CountTrackMediaItems(trackLoop) ? (
				trackLoopNum = GetMediaTrackInfo_Value(trackLoop, "IP_TRACKNUMBER");
				trackLoopNum != lastTrackSaved ? (
					j = tracksStored-1;
					isTrackStored = 0;
					while(j >= 0) (
						tracks[j] == trackLoopNum ? (
							isTrackStored = 1;
						);
						j -= 1;
					);
					isTrackStored == 0 ? (
						tracks[tracksStored] = trackLoopNum;
						tracksStored += 1;
					);
				);
			);
			
			i += 1;
		);
	);
);

getUniqueTracks();

function deleteSelectedItemsOnTrack(trackInLoop) local(j, item, nextItem) (
	j = 0;
	loop(itemCount-1,
		item = GetSelectedMediaItem(0, j);
		GetMediaTrackInfo_Value(GetMediaItem_Track(item), "IP_TRACKNUMBER") == GetMediaTrackInfo_Value(trackInLoop, "IP_TRACKNUMBER") ? (
			// Item is on loop track
			nextItem = GetSelectedMediaItem(0, j+1);
			GetMediaTrackInfo_Value(GetMediaItem_Track(nextItem), "IP_TRACKNUMBER") == GetMediaTrackInfo_Value(trackInLoop, "IP_TRACKNUMBER") ? (
				DeleteTrackMediaItem(trackInLoop, nextItem);
			):(
				// Return 0 and exit loop once it no longer needs to loop
				0;
			);
		);
		j += 1;
	);
);


i = 0;
while(tracks[i] > 0) (
	tr = GetTrack(0, tracks[i]);
	deleteSelectedItemsOnTrack(tr);
	i += 1;
);

PreventUIRefresh(-1);
Undo_EndBlock2(0, "Delete every second item on tracks", 0);

freembuf(0);
UpdateArrange();
